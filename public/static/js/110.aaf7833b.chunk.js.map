{"version":3,"file":"static/js/110.aaf7833b.chunk.js","mappings":"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","sources":["GamesCommon.js","pages/theatre/games/Favorites.js"],"sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Obfuscated } from './obfuscate.js';\nimport resolveRoute from './resolveRoute.js';\n\n/**\n *\n * @typedef {object} GamesCategoryParams\n\n */\n\n/**\n *\n * @typedef {object} LimitedGame\n * @property {string} name\n * @property {string} id\n * @property {string} category\n */\n\n/**\n *\n * @typedef {LimitedGame[]} GamesCategory\n */\n\nexport class GamesAPI {\n\t/**\n\t *\n\t * @param {string} server\n\t * @param {AbortSignal} [signal]\n\t */\n\tconstructor(server, signal) {\n\t\tthis.server = server;\n\t\tthis.signal = signal;\n\t}\n\t/**\n\t *\n\t * @param {string} url\n\t * @param {object} init\n\t * @returns\n\t */\n\tasync fetch(url, init = {}) {\n\t\treturn await fetch(new URL(url, this.server), {\n\t\t\t...init,\n\t\t\tsignal: this.signal,\n\t\t});\n\t}\n\t/**\n\t *\n\t * @param {string} id\n\t * @returns {LimitedGame}\n\t */\n\tasync game(id) {\n\t\tconst outgoing = await this.fetch(`./games/${id}/`);\n\n\t\tconst json = await outgoing.json();\n\n\t\tif (!outgoing.ok) {\n\t\t\tthrow new Error(json.message || json.error);\n\t\t}\n\n\t\treturn json;\n\t}\n\t/**\n\t *\n\t * @param {string} id\n\t * @param {string} token\n\t * @returns {LimitedGame}\n\t */\n\tasync game_plays(id, token) {\n\t\tconst outgoing = await this.fetch(\n\t\t\t`./games/${id}/plays?` +\n\t\t\t\tnew URLSearchParams({\n\t\t\t\t\ttoken,\n\t\t\t\t}),\n\t\t\t{\n\t\t\t\tmethod: 'PUT',\n\t\t\t}\n\t\t);\n\n\t\tconst json = await outgoing.json();\n\n\t\tif (!outgoing.ok) {\n\t\t\tthrow new Error(json.message || json.error);\n\t\t}\n\n\t\treturn json;\n\t}\n\tsort_params(params) {\n\t\tfor (let param in params) {\n\t\t\tswitch (typeof params[param]) {\n\t\t\t\tcase 'undefined':\n\t\t\t\tcase 'object':\n\t\t\t\t\tdelete params[param];\n\t\t\t\t\tbreak;\n\t\t\t\t// no default\n\t\t\t}\n\t\t}\n\n\t\treturn params;\n\t}\n\t/**\n\t *\n\t * @param {{leastGreatest?:boolean,category?:string[],sort?:string,search?:string,limit?:number,limitPerCategory:?number}} params\n\t * @returns {GamesCategory}\n\t */\n\tasync category(params) {\n\t\tconst outgoing = await this.fetch(\n\t\t\t'./games/?' + new URLSearchParams(this.sort_params(params))\n\t\t);\n\n\t\tconst json = await outgoing.json();\n\n\t\tif (!outgoing.ok) {\n\t\t\tthrow new Error(json.message || json.error);\n\t\t}\n\n\t\treturn json;\n\t}\n}\n\nfunction Item(props) {\n\tconst [loaded, set_loaded] = useState(false);\n\n\treturn (\n\t\t<Link\n\t\t\tclassName=\"item\"\n\t\t\tto={`${resolveRoute('/theatre/', 'player')}?id=${props.id}`}\n\t\t>\n\t\t\t<div className=\"thumbnail\" data-loaded={Number(loaded)}>\n\t\t\t\t<img\n\t\t\t\t\talt=\"\"\n\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\tonLoad={() => set_loaded(true)}\n\t\t\t\t\tsrc={`/thumbnails/${props.id}.webp`}\n\t\t\t\t></img>\n\t\t\t</div>\n\t\t\t<div className=\"name\">\n\t\t\t\t<Obfuscated ellipsis>{props.name}</Obfuscated>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nfunction LoadingItem() {\n\treturn (\n\t\t<div className=\"item loading\">\n\t\t\t<div className=\"thumbnail\" />\n\t\t\t<div className=\"name\" />\n\t\t</div>\n\t);\n}\n\n/**\n * @param {React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {items: {id:string,name?:string,loading:boolean}}} props\n * @returns\n */\nexport function ItemList(props) {\n\tconst { items, ...attributes } = props;\n\n\tconst children = [];\n\n\tfor (let item of items) {\n\t\tif (item.loading) {\n\t\t\tchildren.push(<LoadingItem key={item.id} id={item.id} />);\n\t\t} else {\n\t\t\tchildren.push(<Item key={item.id} id={item.id} name={item.name} />);\n\t\t}\n\t}\n\n\treturn <div {...attributes}>{children}</div>;\n}\n","import { useEffect, useState } from 'react';\nimport { DB_API } from '../../../root.js';\nimport { GamesAPI, ItemList } from '../../../GamesCommon.js';\nimport { Obfuscated } from '../../../obfuscate.js';\nimport '../../../styles/TheatreCategory.scss';\n\nconst FETCH_FAILED = /TypeError: Failed to fetch/;\n\nexport default function Favorites(props) {\n\tconst [data, set_data] = useState(() =>\n\t\tprops.layout.current.settings.favorite_games.map(id => ({\n\t\t\tloading: true,\n\t\t\tid,\n\t\t}))\n\t);\n\n\tuseEffect(() => {\n\t\tconst abort = new AbortController();\n\n\t\tvoid (async function () {\n\t\t\tconst api = new GamesAPI(DB_API, abort.signal);\n\t\t\tconst data = [];\n\n\t\t\tfor (let id of props.layout.current.settings.favorite_games) {\n\t\t\t\ttry {\n\t\t\t\t\tdata.push(await api.game(id));\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// cancelled? page unload?\n\t\t\t\t\tif (!FETCH_FAILED.test(error)) {\n\t\t\t\t\t\tconsole.warn('Unable to fetch game:', id, error);\n\t\t\t\t\t\tprops.layout.current.settings.favorite_games.splice(\n\t\t\t\t\t\t\tprops.layout.current.settings.favorite_games.indexOf(id),\n\t\t\t\t\t\t\t1\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// update settings\n\t\t\tprops.layout.current.set_settings({\n\t\t\t\t...props.layout.current.settings,\n\t\t\t});\n\n\t\t\tset_data(data);\n\t\t})();\n\n\t\treturn () => abort.abort();\n\t}, [props.layout]);\n\n\tif (props.layout.current.settings.favorite_games.length === 0) {\n\t\treturn (\n\t\t\t<main className=\"error\">\n\t\t\t\t<p>You haven't added any favorite games.</p>\n\t\t\t</main>\n\t\t);\n\t} else {\n\t\treturn (\n\t\t\t<main className=\"theatre-category\">\n\t\t\t\t<section>\n\t\t\t\t\t<div className=\"name\">\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t<Obfuscated>Favorites</Obfuscated>\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"items\">\n\t\t\t\t\t\t<ItemList items={data} />\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</main>\n\t\t);\n\t}\n}\n"],"names":["GamesAPI","server","signal","this","url","init","fetch","URL","id","outgoing","json","ok","Error","message","error","token","URLSearchParams","method","params","param","sort_params","Item","props","useState","loaded","set_loaded","className","to","resolveRoute","Number","alt","loading","onLoad","src","ellipsis","name","LoadingItem","ItemList","items","attributes","children","item","push","FETCH_FAILED","Favorites","layout","current","settings","favorite_games","map","data","set_data","useEffect","abort","AbortController","api","DB_API","game","test","console","warn","splice","indexOf","set_settings","length"],"sourceRoot":""}